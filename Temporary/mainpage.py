'''
@file                mainpage.py
@brief               Brief doc for mainpage.py
@details             Detailed doc for mainpage.py 

@mainpage

@section sec_intro   Introduction
                        This is our project postings for Peyton Archibald and Caleb Kephart
                        
                        Our Source Code Repository can be found:  \htmlonly <a href="https://bitbucket.org/peytia/me305/src/master/">here</a> \endhtmlonly

@section sec_lb1     Lab 1
   
In this lab, a python file was created which coded a STM Nucleo to wait in a standby state
until a user applies a button press input, which will then cycle between various blinking patterns.
                        
The page for a more detailed description of this lab can be found in the Files dropdown on the left-hand tab of this page. 

The page can also be found: \htmlonly <a href="https://peytia.bitbucket.io/main__Lab1_8py.html">here</a> \endhtmlonly
                        
A video of this code can be seen at the following youtube link:
            
\htmlonly
<iframe width="560" height="315" src="https://www.youtube.com/embed/-y_-CNrFDrs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
\endhtmlonly
            
@section sec_lb2    Lab 2
    
    
In this lab, a series of python files were created which coded a STM32 Nucleo accept user 
input and display outputs generated by an encoder.  An driver was made which could allow interface
to a given encoder. Then an encoder task and a user task were created to allow user input and encoder
manipulation. Then a main.py which called the tasks and managed time of each task.

The page for a more detailed description of this lab can be found in the Files dropdown on the left-hand tab of this page. 

The page can also be found: \htmlonly <a href="https://peytia.bitbucket.io/main__Lab2_8py.html">here</a> \endhtmlonly

            
A video of this code can be seen at the following youtube link:

\htmlonly
<iframe width="560" height="315" src="https://www.youtube.com/embed/wGd1_bI-Tz8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
\endhtmlonly

@section sec_lb3    Lab 3
    
    
In this lab, a series of python files were created which coded a STM32 Nucleo accept user 
input and operate a DC motor.  An driver was made which could allow interface
to a given motor. Then a motor task, encoder task taken from a previous lab, 
and a user task were created to allow user input and motor manipulation. Then a main.py which called 
the tasks and managed time of each task.

The page for a more detailed description of this lab can be found in the Files dropdown on the left-hand tab of this page. 

The page can also be found: \htmlonly <a href="https://peytia.bitbucket.io/main__Lab3_8py.html">here</a> \endhtmlonly

@section sec_lb4    Lab 4
    
    
In this lab, a series of python files were created which coded a STM32 Nucleo accept user 
input to control the speed of a DC motor with the sensor input of an encoder.  
A class was made which could be incorperated into the previous motor task and modulate the power
given to the motor by the board. The motor task, user task, and encoder task files from previous labs
were built upon to serve the function of this lab.

The page for a more detailed description of this lab can be found in the Files dropdown on the left-hand tab of this page. 

The page can also be found: \htmlonly <a href="https://peytia.bitbucket.io/main__Lab4_8py.html">here</a> \endhtmlonly

@section sec_hw3    Homework 0x02 and 0x03


In this assignment, we developed a model for the ball balancing system to gain a deeper understanding
on how to carry out the final term project. This can be found at https://peytia.bitbucket.io/H0x03.html


@author              Peyton Archibald
@author              Caleb Kephart

@copyright           Open Source

@date                October 8, 2021
'''